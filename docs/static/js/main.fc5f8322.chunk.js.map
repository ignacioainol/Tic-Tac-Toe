{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","index.js"],"names":["styles","background","border","fontSize","height","fontWeight","cursor","outline","Square","value","onClick","style","Board","squares","borderRadius","width","margin","display","gridTemplate","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","timeInHistory","slice","current","_step","move","destination","step","App","ReactDOM","render","document","getElementById"],"mappings":"4KAEMA,EAAS,CACXC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,OAAQ,QACRC,WAAY,MACZC,OAAQ,UACRC,QAAS,QAGAC,EAAS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC5B,OACI,wBAAQC,MAAOX,EAAQU,QAASA,EAAhC,SACKD,KCZAG,EAAQ,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASH,EAAc,EAAdA,QAW7B,OACI,qBAAKC,MAVK,CACVT,OAAQ,qBACRY,aAAc,OACdC,MAAO,QACPC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAId,SAEQL,EAAQM,KAAI,SAACC,EAAQC,GAAT,OACR,cAAC,EAAD,CAAgBZ,MAAOW,EAAQV,QAAS,kBAAMA,EAAQW,KAAzCA,SCd3BrB,EAAS,CACXe,MAAO,QACPC,OAAQ,aAGCM,EAAO,WAAO,IAAD,EAEQC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAFhC,mBAEfC,EAFe,KAENC,EAFM,OAGcJ,mBAAS,GAHvB,mBAGfK,EAHe,KAGHC,EAHG,OAIQN,oBAAS,GAJjB,mBAIfO,EAJe,KAINC,EAJM,KAKhBC,ECdH,SAAyBnB,GAW5B,IAVA,IAAMoB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACjBY,EAAMZ,GADW,GAC5Bc,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIxB,EAAQsB,IAAMtB,EAAQsB,KAAOtB,EAAQuB,IAAMvB,EAAQsB,KAAOtB,EAAQwB,GAClE,OAAOxB,EAAQsB,GAGvB,OAAO,KDHQG,CAAgBZ,EAAQE,IAgCvC,OACI,qCACI,cAAC,EAAD,CAAOf,QAASa,EAAQE,GAAalB,QAhCzB,SAAAW,GAChB,IAAMkB,EAAgBb,EAAQc,MAAM,EAAGZ,EAAa,GAC9Ca,EAAUF,EAAcX,GACxBf,EAAO,YAAO4B,GAEhBT,GAAUnB,EAAQQ,KAEtBR,EAAQQ,GAAKS,EAAU,IAAM,IAC7BH,EAAW,GAAD,mBAAKY,GAAL,CAAoB1B,KAC9BgB,EAAcU,EAAcL,QAC5BH,GAAYD,OAuBR,sBAAKnB,MAAOX,EAAZ,UAEQgC,EAAS,WAAaA,EAChB,iBAAmBF,EAAU,IAAM,KAjBrDJ,EAAQP,KAAI,SAACuB,EAAOC,GAChB,IAAMC,EAAcD,EAAI,sBAAkBA,GAAS,cACnD,OACI,6BACI,wBAAQjC,QAAS,kBAT7BmB,EADYgB,EAU8BF,QAR1CZ,EAAWc,EAAO,IAAM,GAFb,IAACA,GAUA,SACKD,KAFAD,aE9BVG,MANf,WACE,OACE,cAAC,EAAD,KCAJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fc5f8322.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst styles = {\r\n    background: 'lightblue',\r\n    border: '5px solid darkblue',\r\n    fontSize: '50px',\r\n    height: '160px',\r\n    fontWeight: '800',\r\n    cursor: 'pointer',\r\n    outline: 'none'\r\n}\r\n\r\nexport const Square = ({ value, onClick }) => {\r\n    return (\r\n        <button style={styles} onClick={onClick}>\r\n            {value}\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Square } from './Square'\r\n\r\nexport const Board = ({ squares, onClick }) => {\r\n\r\n    const style = {\r\n        border: '5px solid darkblue',\r\n        borderRadius: '10px',\r\n        width: '500px',\r\n        margin: '0 auto',\r\n        display: 'grid',\r\n        gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            {\r\n                squares.map((square, i) => (\r\n                    <Square key={i} value={square} onClick={() => onClick(i)} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { calculateWinner } from '../helpers'\r\nimport { Board } from './Board'\r\n\r\nconst styles = {\r\n    width: '200px',\r\n    margin: '20px auto'\r\n}\r\n\r\nexport const Game = () => {\r\n\r\n    const [history, setHistory] = useState([Array(9).fill(null)]);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const winner = calculateWinner(history[stepNumber]);\r\n\r\n    const handleClick = i => {\r\n        const timeInHistory = history.slice(0, stepNumber + 1);\r\n        const current = timeInHistory[stepNumber];\r\n        const squares = [...current];\r\n\r\n        if (winner || squares[i]) return;\r\n\r\n        squares[i] = xIsNext ? 'X' : 'O';\r\n        setHistory([...timeInHistory, squares]);\r\n        setStepNumber(timeInHistory.length);\r\n        setXisNext(!xIsNext);\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setXisNext(step % 2 === 0);\r\n    }\r\n\r\n    const renderMoves = () =>\r\n        history.map((_step, move) => {\r\n            const destination = move ? `Go to move #${move}` : 'Go to start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => jumpTo(move)}>\r\n                        {destination}\r\n                    </button>\r\n                </li>\r\n            )\r\n        });\r\n\r\n    return (\r\n        <>\r\n            <Board squares={history[stepNumber]} onClick={handleClick} />\r\n            <div style={styles}>\r\n                {\r\n                    winner ? 'Winner: ' + winner\r\n                        : 'Next Player: ' + (xIsNext ? 'X' : 'O')\r\n                }\r\n                {\r\n                    renderMoves()\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}","import { Game } from \"./components/Game\";\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}